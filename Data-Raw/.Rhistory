"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l)[9][, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )] ) )
get(l)[2][, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]
mcqdat99[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]
get(l[1])
mcqdat99[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]
get(l[1])
nrow(mcqdat99)
nrow(get(l[1]))
# bind columns indicating age at diagnosis for specific cancer types
timeall <- data.frame( rbind( get(l[1])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[2])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[3])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[4])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[5])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[6])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[7])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[8])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )],
get(l[9])[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )] ) )
nrow(timeall)
l<-c('mcqdat99',
paste0('mcqdat0',c(1,3,5,7,9)),
paste0('mcqdat',c(11,13,15)))
l.2 <- lapply(l, function(x) get(l)[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]) %>%
do.call('rbind',l.2)
get(l)[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]
l.2 <- lapply(l, function(x) get(l)[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]) %>%
do.call('rbind',l.2)
l<-c('mcqdat99',
paste0('mcqdat0',c(1,3,5,7,9)),
paste0('mcqdat',c(11,13,15)))
l.2 <- lapply(l, function(x) get(l)[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]) %>%
do.call('rbind',l.2)
l.2 <- lapply(l, function(x) get(l)[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]) %>%
do.call('rbind',.)
nrow(l.2)
l.2 <- list()
for(i in 1:length( l ) ){
l.2[[i]] <- get( l[i] )[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )])
}
l.2 <- list()
for(i in 1:length( l ) ){
l.2[[i]] <- get( l[i] )[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]
}
do.call('rbind', l.2)
nrow(do.call('rbind', l.2))
nrow(timeall)
l.2 <- list()
for(i in 1:length( l ) ){
l.2[[i]] <- get( l[i] )[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )] %>%
timeall <- do.call('rbind', .)
}
l.2 <- list()
for(i in 1:length( l ) ){
l.2[[i]] <- get( l[i] )[, c( "SEQN", "MCQ240A", "MCQ240B", "MCQ240C", "MCQ240D", "MCQ240E",
"MCQ240F", "MCQ240G", "MCQ240H", "MCQ240I", "MCQ240J",
"MCQ240K", "MCQ240L", "MCQ240M", "MCQ240N", "MCQ240O",
"MCQ240P", "MCQ240Q", "MCQ240R", "MCQ240S", "MCQ240T",
"MCQ240U", "MCQ240V", "MCQ240W", "MCQ240X", "MCQ240Y",
"MCQ240Z", "MCQ240AA", "MCQ240BB", "MCQ240CC", "MCQ240DD" )]
timeall <- do.call('rbind', l.2)
}
nrow(timeall)
l
l.4 <- list()
nrow(dkall)
# bind columns indicating age at diagnosis of cancer
l.3 <- c( 'mcqdat05', 'mcqdat07', 'mcqdat09', 'mcqdat11', 'mcqdat13', 'mcqdat15' )
l.4 <- list()
for ( i in 1:length( l.3 )){
l.4[[i]] <- get( l.3[i] )[, c( "SEQN", "MCQ240DK" )]
dkall <- do.call('rbind', l.4)
}
nrow(dkall)
# 2017-2018 cycle columns
time1718 <- mcqdat17[, c( 'SEQN', 'MCD240A', 'MCD240B', 'MCD240C' )]
# merge
mcqall.b <- left_join( timeall, dkall, by = 'SEQN' ) %>%
left_join( mcqall, ., by = 'SEQN' ) %>%
left_join( ., time1718, by = 'SEQN' )
# cancer site labels
csites <- c( 'Bladder', 'Blood', 'Bone', 'Brain', 'Breast', 'Cervical', 'Colon',
'Esophageal', 'Gallbladder', 'Kidney', 'Larynx', 'Leukemia', 'Liver', 'Lung', 'Lymphoma', 'Melanoma',
'Oral/lip', 'Nervous System', 'Ovarian', 'Pancreatic', 'Prostate', 'Rectal', 'Non-Melanoma Skin',
'Skin-Other', 'Soft Tissue', 'Stomach', 'Testicular', 'Thyroid', 'Uterus', 'Other', 'Unknown' )
age.dx.var <- c( paste0( 'MCQ240', LETTERS ), paste0( 'MCQ240', c( 'AA', 'BB', 'CC', 'DD', 'DK' ) ) )
mcqall.b$AgeDxA <- NA
for ( i in 1:length( csites ) ){
mcqall.b[which( mcqall.b$CATYPEA == csites[i] ), 'AgeDxA'] <- mcqall.b[which( mcqall.b$CATYPEA == csites[i] ), age.dx.var[i]]
}
mcqall.b$AgeDxB <- NA
mcqall.b$AgeDxC <- NA
mcqall.b$AgeDxB <- NA
mcqall.b$AgeDxC <- NA
# merge
mcqall.b <- left_join( timeall, dkall, by = 'SEQN' ) %>%
left_join( mcqall, ., by = 'SEQN' ) %>%
left_join( ., time1718, by = 'SEQN' )
# cancer site labels
csites <- c( 'Bladder', 'Blood', 'Bone', 'Brain', 'Breast', 'Cervical', 'Colon',
'Esophageal', 'Gallbladder', 'Kidney', 'Larynx', 'Leukemia', 'Liver', 'Lung', 'Lymphoma', 'Melanoma',
'Oral/lip', 'Nervous System', 'Ovarian', 'Pancreatic', 'Prostate', 'Rectal', 'Non-Melanoma Skin',
'Skin-Other', 'Soft Tissue', 'Stomach', 'Testicular', 'Thyroid', 'Uterus', 'Other', 'Unknown' )
age.dx.var <- c( paste0( 'MCQ240', LETTERS ), paste0( 'MCQ240', c( 'AA', 'BB', 'CC', 'DD', 'DK' ) ) )
mcqall.b$AgeDxA <- NA
for ( i in 1:length( csites ) ){
mcqall.b[which( mcqall.b$CATYPEA == csites[i] ), 'AgeDxA'] <- mcqall.b[which( mcqall.b$CATYPEA == csites[i] ), age.dx.var[i]]
}
mcqall.b$AgeDxB <- NA
mcqall.b$AgeDxC <- NA
for ( i in 1:30 ){
mcqall.b[which( mcqall.b$CATYPEB == csites[i] ), 'AgeDxB'] <- mcqall.b[which( mcqall.b$CATYPEB == csites[i] ), age.dx.var[i]]
mcqall.b[which( mcqall.b$CATYPEC == csites[i] ), 'AgeDxC'] <- mcqall.b[which( mcqall.b$CATYPEC == csites[i] ), age.dx.var[i]]
}
# cycle 10 ( 2017-2018 ) already has a variable with age at a, b,  and c cancer dx
# so I will append them to new variables created
mcqall.bc <- mcqall.b %>%
mutate( AgeDxA = ifelse( cycle == '2017-2018', MCD240A, AgeDxA ),
AgeDxB = ifelse( cycle == '2017-2018', MCD240B, AgeDxB ),
AgeDxC = ifelse( cycle == '2017-2018', MCD240C, AgeDxC ) )
# CREATE VARIABLES
mcqall.bcd <- mcqall.bc%>%
rowwise(  )%>%
mutate( RIDAGEMN = ifelse( is.na( RIDAGEMN ) == T, RIDAGEYR*12, RIDAGEMN ),
TimeSinceCADX = ifelse( is.na( AgeDxA ) == T & is.na( AgeDxB ) == T & is.na( AgeDxC ) == T, NA,
ifelse( CA == 1, RIDAGEYR-min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ), NA ) ) ,
PrimaryCA = as.factor( ( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ), NA ) ) ) ) ) ,
TimeCAFactor = as.factor( ifelse( TimeSinceCADX < 2,  '2< years',
ifelse( TimeSinceCADX >= 2 & TimeSinceCADX < 6, '>= 2 and <6 years',
ifelse( TimeSinceCADX >= 6,  '>= 6 years', NA ) ) ) ) ,
AgeDxAmn = AgeDxA*12 ,
AgeDxBmn = AgeDxB*12 ,
AgeDxCmn = AgeDxC*12 ,
TimeSinceCADXmn = ifelse( is.na( AgeDxAmn ) == T & is.na( AgeDxBmn ) == T & is.na( AgeDxCmn ) == T, NA,
ifelse( CA == 1, RIDAGEMN-min( c( AgeDxAmn, AgeDxBmn, AgeDxCmn ),  na.rm = TRUE ), NA ) ) ,
TimeCAFactormn = as.factor( ifelse( TimeSinceCADXmn < 24,  '2< years',
ifelse( TimeSinceCADXmn >= 24 & TimeSinceCADXmn<72, '>= 2 and <6 years',
ifelse( TimeSinceCADXmn >= 72,  '>= 6 years', NA ) ) ) ) ,
TimeSinceCADXmn = ifelse( TimeSinceCADXmn < 0, NA, TimeSinceCADXmn ) ,
TimeCAFactormn = ifelse( TimeSinceCADXmn < 0, NA, as.character( TimeCAFactormn ) ) ,
TimeSinceCADX = ifelse( TimeSinceCADX < 0, NA, TimeSinceCADX ) ,
TimeCAFactor = factor( ifelse( TimeSinceCADX < 0, NA, as.character( TimeCAFactor ) ) ) ) %>%
select( SEQN, TimeSinceCADX, PrimaryCA, CA, TimeCAFactor, RIDAGEYR, RIDAGEMN, AgeDxA, AgeDxB, AgeDxC, CATYPEA, CATYPEB, CATYPEC,
TimeSinceCADXmn, TimeCAFactormn, AgeDxAmn, AgeDxBmn, AgeDxCmn )
# fix some rows without values
mcqall.bcd$PrimaryCA <- factor( ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == FALSE, paste( mcqall.bcd$CATYPEA ),
ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == TRUE, 'Unknown',
ifelse( is.na( mcqall.bcd$PrimaryCA ) == FALSE, paste( mcqall.bcd$PrimaryCA ), NA ) ) ) )
levels(mcqall.bcd$PrimaryCA)
table(mcqall$bcd)
table(mcqall.bcd$PrimaryCA
table(mcqall.bcd$PrimaryCA)
names(mcqall.bcd)
mcqall.bcd[which(mcqall.bcd$PrimaryCA=='Non-Melanoma Skin'),]
mcqall.bcd[which(mcqall.bcd$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd$CATYPEB)==F,]
mcqall.bcd[which(mcqall.bcd$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd$CATYPEB)==F),]
View(mcqall.bcd[which(mcqall.bcd$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd$CATYPEB)==F),])
mcqall.bcd%>%
mutate(PrimaryCA = ifelse(PrimaryCA == 'Non-Melanoma Skin' & is.na(CATYPEB)==F, CATYPEB, PrimaryCA))
mcqall.bcd.2<-mcqall.bcd%>%
mutate(PrimaryCA = ifelse(PrimaryCA == 'Non-Melanoma Skin' & is.na(CATYPEB)==F, CATYPEB, PrimaryCA))
View(mcqall.bcd.2[which(mcqall.bcd.2$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd.2$CATYPEB)==F),])
# CREATE VARIABLES
mcqall.bcd <- mcqall.bc%>%
rowwise(  )%>%
mutate( RIDAGEMN = ifelse( is.na( RIDAGEMN ) == T, RIDAGEYR*12, RIDAGEMN ),
TimeSinceCADX = ifelse( is.na( AgeDxA ) == T & is.na( AgeDxB ) == T & is.na( AgeDxC ) == T, NA,
ifelse( CA == 1, RIDAGEYR-min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ), NA ) ) ,
PrimaryCA = as.factor( ( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA != 'Non-Melanoma Skin', paste0( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB != 'Non-Melanoma Skin', paste0( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC != 'Non-Melanoma Skin', paste0( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste0( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste0( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste0( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste0( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA, paste0( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB, paste0( CATYPEB ),
NA ) ) ) ) ) ) ) ) ) ) ),
TimeCAFactor = as.factor( ifelse( TimeSinceCADX < 2,  '2< years',
ifelse( TimeSinceCADX >= 2 & TimeSinceCADX < 6, '>= 2 and <6 years',
ifelse( TimeSinceCADX >= 6,  '>= 6 years', NA ) ) ) ) ,
AgeDxAmn = AgeDxA*12 ,
AgeDxBmn = AgeDxB*12 ,
AgeDxCmn = AgeDxC*12 ,
TimeSinceCADXmn = ifelse( is.na( AgeDxAmn ) == T & is.na( AgeDxBmn ) == T & is.na( AgeDxCmn ) == T, NA,
ifelse( CA == 1, RIDAGEMN-min( c( AgeDxAmn, AgeDxBmn, AgeDxCmn ),  na.rm = TRUE ), NA ) ) ,
TimeCAFactormn = as.factor( ifelse( TimeSinceCADXmn < 24,  '2< years',
ifelse( TimeSinceCADXmn >= 24 & TimeSinceCADXmn<72, '>= 2 and <6 years',
ifelse( TimeSinceCADXmn >= 72,  '>= 6 years', NA ) ) ) ) ,
TimeSinceCADXmn = ifelse( TimeSinceCADXmn < 0, NA, TimeSinceCADXmn ) ,
TimeCAFactormn = ifelse( TimeSinceCADXmn < 0, NA, as.character( TimeCAFactormn ) ) ,
TimeSinceCADX = ifelse( TimeSinceCADX < 0, NA, TimeSinceCADX ) ,
TimeCAFactor = factor( ifelse( TimeSinceCADX < 0, NA, as.character( TimeCAFactor ) ) ) ) %>%
select( SEQN, TimeSinceCADX, PrimaryCA, CA, TimeCAFactor, RIDAGEYR, RIDAGEMN, AgeDxA, AgeDxB, AgeDxC, CATYPEA, CATYPEB, CATYPEC,
TimeSinceCADXmn, TimeCAFactormn, AgeDxAmn, AgeDxBmn, AgeDxCmn )
# fix some rows without values
mcqall.bcd$PrimaryCA <- factor( ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == FALSE, paste( mcqall.bcd$CATYPEA ),
ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == TRUE, 'Unknown',
ifelse( is.na( mcqall.bcd$PrimaryCA ) == FALSE, paste( mcqall.bcd$PrimaryCA ), NA ) ) ) )
View(mcqall.bcd.2[which(mcqall.bcd.2$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd.2$CATYPEB)==F),])
table(mcqall.bcd$PrimaryCA)
View(mcqall.bcd.2[which(min( c( mcqall$AgeDxA, mcqall$AgeDxB, mcqall$AgeDxC ),  na.rm = TRUE ) == mcqall$AgeDxB),])
View(mcqall.bcd.2[which(min( c( mcqall$AgeDxA, mcqall$AgeDxB, mcqall$AgeDxC ),  na.rm = TRUE ) == mcqall$AgeDxC),])
View(mcqall.bcd.2[which(min( c( mcqall$AgeDxA, mcqall$AgeDxB, mcqall$AgeDxC ),  na.rm = TRUE ) == mcqall$AgeDxC),])
View(mcqall.bcd.2[which(mcqall$AgeDxA =='Non-Melanoma Skin', mcqall$AgeDxB =='Non-Melanoma Skin', mcqall$AgeDxC =='Non-Melanoma Skin' ),])
mcqall$CATYPEA
View(mcqall.bcd.2[which(mcqall$AgeDxA =='Non-Melanoma Skin' | mcqall$AgeDxB =='Non-Melanoma Skin' | mcqall$AgeDxC =='Non-Melanoma Skin' ),])
View(mcqall.bcd.2[which(mcqall$CATYPEA =='Non-Melanoma Skin' | mcqall$CATYPEB =='Non-Melanoma Skin' | mcqall$CATYPEC =='Non-Melanoma Skin' ),])
View(mcqall.bcd.2[which(mcqall$CATYPEA =='Non-Melanoma Skin' | mcqall$CATYPEB =='Non-Melanoma Skin' | mcqall$CATYPEC =='Non-Melanoma Skin' ),])
# CREATE VARIABLES
mcqall.bcd <- mcqall.bc%>%
rowwise(  )%>%
mutate( RIDAGEMN = ifelse( is.na( RIDAGEMN ) == T, RIDAGEYR*12, RIDAGEMN ),
TimeSinceCADX = ifelse( is.na( AgeDxA ) == T & is.na( AgeDxB ) == T & is.na( AgeDxC ) == T, NA,
ifelse( CA == 1, RIDAGEYR-min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ), NA ) ) ,
PrimaryCA = as.factor( ( ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA != 'Non-Melanoma Skin', paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB != 'Non-Melanoma Skin', paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC != 'Non-Melanoma Skin', paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxA & CATYPEA == 'Non-Melanoma Skin' & min( c( AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxB & CATYPEB == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxC ),  na.rm = TRUE ) == AgeDxC, paste( CATYPEC ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxA, paste( CATYPEA ),
ifelse( min( c( AgeDxA, AgeDxB, AgeDxC ),  na.rm = TRUE ) == AgeDxC & CATYPEC == 'Non-Melanoma Skin' & min( c( AgeDxA, AgeDxB ),  na.rm = TRUE ) == AgeDxB, paste( CATYPEB ),
NA ) ) ) ) ) ) ) ) ) ) ),
TimeCAFactor = as.factor( ifelse( TimeSinceCADX < 2,  '2< years',
ifelse( TimeSinceCADX >= 2 & TimeSinceCADX < 6, '>= 2 and <6 years',
ifelse( TimeSinceCADX >= 6,  '>= 6 years', NA ) ) ) ) ,
AgeDxAmn = AgeDxA*12 ,
AgeDxBmn = AgeDxB*12 ,
AgeDxCmn = AgeDxC*12 ,
TimeSinceCADXmn = ifelse( is.na( AgeDxAmn ) == T & is.na( AgeDxBmn ) == T & is.na( AgeDxCmn ) == T, NA,
ifelse( CA == 1, RIDAGEMN-min( c( AgeDxAmn, AgeDxBmn, AgeDxCmn ),  na.rm = TRUE ), NA ) ) ,
TimeCAFactormn = as.factor( ifelse( TimeSinceCADXmn < 24,  '2< years',
ifelse( TimeSinceCADXmn >= 24 & TimeSinceCADXmn<72, '>= 2 and <6 years',
ifelse( TimeSinceCADXmn >= 72,  '>= 6 years', NA ) ) ) ) ,
TimeSinceCADXmn = ifelse( TimeSinceCADXmn < 0, NA, TimeSinceCADXmn ) ,
TimeCAFactormn = ifelse( TimeSinceCADXmn < 0, NA, as.character( TimeCAFactormn ) ) ,
TimeSinceCADX = ifelse( TimeSinceCADX < 0, NA, TimeSinceCADX ) ,
TimeCAFactor = factor( ifelse( TimeSinceCADX < 0, NA, as.character( TimeCAFactor ) ) ) ) %>%
select( SEQN, TimeSinceCADX, PrimaryCA, CA, TimeCAFactor, RIDAGEYR, RIDAGEMN, AgeDxA, AgeDxB, AgeDxC, CATYPEA, CATYPEB, CATYPEC,
TimeSinceCADXmn, TimeCAFactormn, AgeDxAmn, AgeDxBmn, AgeDxCmn )
# fix some rows without values
mcqall.bcd$PrimaryCA <- factor( ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == FALSE, paste( mcqall.bcd$CATYPEA ),
ifelse( is.na( mcqall.bcd$PrimaryCA ) == TRUE & mcqall.bcd$CA == 1 & is.na( mcqall.bcd$CATYPEA ) == TRUE, 'Unknown',
ifelse( is.na( mcqall.bcd$PrimaryCA ) == FALSE, paste( mcqall.bcd$PrimaryCA ), NA ) ) ) )
View(mcqall.bcd.2[which(mcqall.bcd.2$PrimaryCA=='Non-Melanoma Skin' & is.na(mcqall.bcd.2$CATYPEB)==F),])
View(mcqall.bcd.2[which(mcqall$CATYPEA =='Non-Melanoma Skin' | mcqall$CATYPEB =='Non-Melanoma Skin' | mcqall$CATYPEC =='Non-Melanoma Skin' ),])
x1 <- rnorm( 1000,100,30 )
x2 <- rnorm( 1000,200,30 )
x3 <- rnorm( 1000,200,30 )
x4 <- rnorm( 1000,200,30 )
x5 <- rnorm( 1000,200,30 )
x6 <- rnorm( 1000,200,30 )
dat <- data.frame( x1, x2, x3, x4, x5, x6 )
#' x2<-rndocim( 1000,200,30 )
#' x2[ c(1,10,100) ] <- 0
#'
#' dat<-data.frame( x1, x2 )
#'
#' a<-get_doci( df=dat, equity.eoy='x1', equity.boy='x2', winsdociize=0.98)
#'
#' head( a )
#'
#' @expdocit
get_doci <- function( df, equity, invest, lbe, mnp, daily.av.exp, dda, winsdociize=0.98 )
{
# checks
if( winsdociize > 1 | winsdociize < 0 )
{ stop( "winsorize argument must be 0 < w < 1" ) }
num <- df[[ equity ]] + df[[ invest ]] + df[[ lbe ]] + df[[ mnp ]]
den <- ( df[[ daily.av.exp ]] + df[[ dda ]] ) / 365
# can't divide by zero
print( paste0( "Denominator cannot be zero: ", sum( den==0 ), " cases have been replaced with NA." ) )
den[ den == 0 ] <- NA
doci <- num / den
top.p    <- 1 - (1-winsdociize)/2
bottom.p <- 0 + (1-winsdociize)/2
top      <- quantile( doci, top.p, na.rm=T )
bottom   <- quantile( doci, bottom.p, na.rm=T )
doci.w    <- doci
doci.w[ doci.w > top    ] <- top
doci.w[ doci.w < bottom ] <- bottom
doci.n <- scale( doci.w )
doci.p <- dplyr::ntile( doci, 100 )
DOCI <- data.frame( doci, doci.w, doci.n, doci.p )
print( summary( DOCI ) )
par( mfrow=c(2,2) )
plot( density( doci,   na.rm=T ), main="Days of Operating Cash and Investments (DOCI)" )
plot( density( doci.w, na.rm=T ), main="DOCI Winsdociized" )
plot( density( doci.n, na.rm=T ), main="DOCI Standardized as Z" )
plot( density( doci.p, na.rm=T ), main="DOCI as Percentile" )
df.doci <- cbind( df, DOCI )
return( df.doci )
}
x1 <- rnorm( 1000,100,30 )
x2 <- rnorm( 1000,200,30 )
x3 <- rnorm( 1000,200,30 )
x4 <- rnorm( 1000,200,30 )
x5 <- rnorm( 1000,200,30 )
x6 <- rnorm( 1000,200,30 )
dat <- data.frame( x1, x2, x3, x4, x5, x6 )
a <- get_doci( df=dat, equity='x1', invest = 'x2',
lbe='x3', mnp='x4', daily.av.exp='x5', dda='x6' )
a <- get_doci( df=dat, equity='x1', invest = 'x2',
lbe='x3', mnp='x4', daily.av.exp='x5', dda='x6' )
# #zero in the denominator
x5[ c(1:10) ] <- 0
x6[ c(1:10) ] <- 0
dat <- data.frame( x1, x2, x3, x4, x5, x6 )
b <- get_doci( df=dat, equity='x1', invest = 'x2',
lbe='x3', mnp='x4', daily.av.exp='x5', dda='x6' )
# winsorize at 0.025 and 0.975 percentiles instead of 0.01 and 0.99
c <- get_doci( df=dat, equity='x1', invest = 'x2',
lbe='x3', mnp='x4', daily.av.exp='x5', dda='x6', winsorize = 0.975 )
#' x2<-rndocim( 1000,200,30 )
#' x2[ c(1,10,100) ] <- 0
#'
#' dat<-data.frame( x1, x2 )
#'
#' a<-get_doci( df=dat, equity.eoy='x1', equity.boy='x2', winsdociize=0.98)
#'
#' head( a )
#'
#' @expdocit
get_doci <- function( df, equity, invest, lbe, mnp, daily.av.exp, dda, winsorize=0.98 )
{
# checks
if( winsdociize > 1 | winsdociize < 0 )
{ stop( "winsorize argument must be 0 < w < 1" ) }
num <- df[[ equity ]] + df[[ invest ]] + df[[ lbe ]] + df[[ mnp ]]
den <- ( df[[ daily.av.exp ]] + df[[ dda ]] ) / 365
# can't divide by zero
print( paste0( "Denominator cannot be zero: ", sum( den==0 ), " cases have been replaced with NA." ) )
den[ den == 0 ] <- NA
doci <- num / den
top.p    <- 1 - (1-winsdociize)/2
bottom.p <- 0 + (1-winsdociize)/2
top      <- quantile( doci, top.p, na.rm=T )
bottom   <- quantile( doci, bottom.p, na.rm=T )
doci.w    <- doci
doci.w[ doci.w > top    ] <- top
doci.w[ doci.w < bottom ] <- bottom
doci.n <- scale( doci.w )
doci.p <- dplyr::ntile( doci, 100 )
DOCI <- data.frame( doci, doci.w, doci.n, doci.p )
print( summary( DOCI ) )
par( mfrow=c(2,2) )
plot( density( doci,   na.rm=T ), main="Days of Operating Cash and Investments (DOCI)" )
plot( density( doci.w, na.rm=T ), main="DOCI Winsdociized" )
plot( density( doci.n, na.rm=T ), main="DOCI Standardized as Z" )
plot( density( doci.p, na.rm=T ), main="DOCI as Percentile" )
df.doci <- cbind( df, DOCI )
return( df.doci )
}
# winsorize at 0.025 and 0.975 percentiles instead of 0.01 and 0.99
c <- get_doci( df=dat, equity='x1', invest = 'x2',
lbe='x3', mnp='x4', daily.av.exp='x5', dda='x6', winsorize = 0.975 )
#' x2<-rndocim( 1000,200,30 )
#' x2[ c(1,10,100) ] <- 0
#'
#' dat<-data.frame( x1, x2 )
#'
#' a<-get_doci( df=dat, equity.eoy='x1', equity.boy='x2', winsdociize=0.98)
#'
#' head( a )
#'
#' @expdocit
get_doci <- function( df, equity, invest, lbe, mnp, daily.av.exp, dda, winsorize=0.98 )
{
# checks
if( winsorize > 1 | winsorize < 0 )
{ stop( "winsorize argument must be 0 < w < 1" ) }
num <- df[[ equity ]] + df[[ invest ]] + df[[ lbe ]] + df[[ mnp ]]
den <- ( df[[ daily.av.exp ]] + df[[ dda ]] ) / 365
# can't divide by zero
print( paste0( "Denominator cannot be zero: ", sum( den==0 ), " cases have been replaced with NA." ) )
den[ den == 0 ] <- NA
doci <- num / den
top.p    <- 1 - (1-winsorize)/2
bottom.p <- 0 + (1-winsorize)/2
top      <- quantile( doci, top.p, na.rm=T )
bottom   <- quantile( doci, bottom.p, na.rm=T )
doci.w    <- doci
doci.w[ doci.w > top    ] <- top
doci.w[ doci.w < bottom ] <- bottom
doci.n <- scale( doci.w )
doci.p <- dplyr::ntile( doci, 100 )
DOCI <- data.frame( doci, doci.w, doci.n, doci.p )
print( summary( DOCI ) )
par( mfrow=c(2,2) )
plot( density( doci,   na.rm=T ), main="Days of Operating Cash and Investments (DOCI)" )
plot( density( doci.w, na.rm=T ), main="DOCI Winsorize" )
plot( density( doci.n, na.rm=T ), main="DOCI Standardized as Z" )
plot( density( doci.p, na.rm=T ), main="DOCI as Percentile" )
df.doci <- cbind( df, DOCI )
return( df.doci )
}
# winsorize at 0.025 and 0.975 percentiles instead of 0.01 and 0.99
c <- get_doci( df=dat, equity='x1', invest = 'x2',
lbe='x3', mnp='x4', daily.av.exp='x5', dda='x6', winsorize = 0.975 )
